//Given a N X N  matrix Matrix[N][N] of positive integers.  There are only three possible moves from a cell Matrix[r][c].
//1. Matrix[r+1][c]
//2. Matrix[r+1][c-1]
//3. Matrix[r+1][c+1]


#include<iostream>
#include<bits/stdc++.h>
using namespace std;
int main()
 {
     int t,i,j;
     cin>>t;
     while(t--){
         int n;
         cin>>n;
         vector<vector<int>>a(n,vector<int>(n,0));
         for(i=0;i<n;i++)
            for(j=0;j<n;j++)
                cin>>a[i][j];
                
         vector<vector<int>>dp(n+1,vector<int>(n+1,INT_MIN));
         for(i=1;i<=n;i++)
            dp[1][i]=a[0][i-1];
        
        // for(i=1;i<=n;i++){
        //     dp[i][1]=dp[i-1][1]+a[i-1][0];
        // }
         for(i=2;i<=n;i++){
             for(j=1;j<=n;j++){
                 if(j+1<=n)
                 dp[i][j]=a[i-1][j-1]+max(dp[i-1][j],max(dp[i-1][j+1],dp[i-1][j-1]));
                 else
                dp[i][j]=a[i-1][j-1]+max(dp[i-1][j],dp[i-1][j-1]);
                 
             }
         }
      
         cout<<*max_element(dp[n].begin(),dp[n].end())<<endl;
     }
	//code
	return 0;
}
